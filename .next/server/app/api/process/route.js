"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/process/route";
exports.ids = ["app/api/process/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "undici?6303":
/*!*************************!*\
  !*** external "undici" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("undici");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprocess%2Froute&page=%2Fapi%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprocess%2Froute.ts&appDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprocess%2Froute&page=%2Fapi%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprocess%2Froute.ts&appDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Volumes_Store1_Yandex_Disk_localized_www_yandex_typography_app_app_api_process_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/process/route.ts */ \"(rsc)/./app/api/process/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/process/route\",\n        pathname: \"/api/process\",\n        filename: \"route\",\n        bundlePath: \"app/api/process/route\"\n    },\n    resolvedPagePath: \"/Volumes/Store1/Yandex.Disk.localized/www-yandex/typography-app/app/api/process/route.ts\",\n    nextConfigOutput,\n    userland: _Volumes_Store1_Yandex_Disk_localized_www_yandex_typography_app_app_api_process_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/process/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9jZXNzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZwcm9jZXNzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcHJvY2VzcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZWb2x1bWVzJTJGU3RvcmUxJTJGWWFuZGV4LkRpc2subG9jYWxpemVkJTJGd3d3LXlhbmRleCUyRnR5cG9ncmFwaHktYXBwJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZWb2x1bWVzJTJGU3RvcmUxJTJGWWFuZGV4LkRpc2subG9jYWxpemVkJTJGd3d3LXlhbmRleCUyRnR5cG9ncmFwaHktYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDd0M7QUFDckg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBvZ3JhcGh5LWFwcC8/MmFkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVm9sdW1lcy9TdG9yZTEvWWFuZGV4LkRpc2subG9jYWxpemVkL3d3dy15YW5kZXgvdHlwb2dyYXBoeS1hcHAvYXBwL2FwaS9wcm9jZXNzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvY2Vzcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2Nlc3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Byb2Nlc3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVm9sdW1lcy9TdG9yZTEvWWFuZGV4LkRpc2subG9jYWxpemVkL3d3dy15YW5kZXgvdHlwb2dyYXBoeS1hcHAvYXBwL2FwaS9wcm9jZXNzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9wcm9jZXNzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprocess%2Froute&page=%2Fapi%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprocess%2Froute.ts&appDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/process/route.ts":
/*!**********************************!*\
  !*** ./app/api/process/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mammoth */ \"(rsc)/./node_modules/mammoth/lib/index.js\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/esm/index.js\");\n/* harmony import */ var _lib_typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/typography */ \"(rsc)/./lib/typography.ts\");\n/* harmony import */ var docx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! docx */ \"(rsc)/./node_modules/docx/dist/index.mjs\");\n/* harmony import */ var pizzip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pizzip */ \"(rsc)/./node_modules/pizzip/js/index.js\");\n/* harmony import */ var pizzip__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(pizzip__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\nfunction typographHtml(html) {\n    const $ = cheerio__WEBPACK_IMPORTED_MODULE_2__.load(html);\n    $(\"body, body *\").contents().each(function() {\n        if (this.type === \"text\") {\n            this.data = (0,_lib_typography__WEBPACK_IMPORTED_MODULE_3__.typographText)(this.data || \"\");\n        }\n    });\n    return $.html();\n}\nfunction transliterate(str) {\n    const map = {\n        А: \"A\",\n        Б: \"B\",\n        В: \"V\",\n        Г: \"G\",\n        Д: \"D\",\n        Е: \"E\",\n        Ё: \"E\",\n        Ж: \"Zh\",\n        З: \"Z\",\n        И: \"I\",\n        Й: \"Y\",\n        К: \"K\",\n        Л: \"L\",\n        М: \"M\",\n        Н: \"N\",\n        О: \"O\",\n        П: \"P\",\n        Р: \"R\",\n        С: \"S\",\n        Т: \"T\",\n        У: \"U\",\n        Ф: \"F\",\n        Х: \"Kh\",\n        Ц: \"Ts\",\n        Ч: \"Ch\",\n        Ш: \"Sh\",\n        Щ: \"Shch\",\n        Ъ: \"\",\n        Ы: \"Y\",\n        Ь: \"\",\n        Э: \"E\",\n        Ю: \"Yu\",\n        Я: \"Ya\",\n        а: \"a\",\n        б: \"b\",\n        в: \"v\",\n        г: \"g\",\n        д: \"d\",\n        е: \"e\",\n        ё: \"e\",\n        ж: \"zh\",\n        з: \"z\",\n        и: \"i\",\n        й: \"y\",\n        к: \"k\",\n        л: \"l\",\n        м: \"m\",\n        н: \"n\",\n        о: \"o\",\n        п: \"p\",\n        р: \"r\",\n        с: \"s\",\n        т: \"t\",\n        у: \"u\",\n        ф: \"f\",\n        х: \"kh\",\n        ц: \"ts\",\n        ч: \"ch\",\n        ш: \"sh\",\n        щ: \"shch\",\n        ъ: \"\",\n        ы: \"y\",\n        ь: \"\",\n        э: \"e\",\n        ю: \"yu\",\n        я: \"ya\",\n        \" \": \"_\",\n        \"—\": \"-\",\n        \"–\": \"-\",\n        \",\": \"\",\n        \".\": \"\",\n        \"\\xab\": \"\",\n        \"\\xbb\": \"\",\n        \"(\": \"\",\n        \")\": \"\",\n        \"[\": \"\",\n        \"]\": \"\",\n        \"{\": \"\",\n        \"}\": \"\",\n        \"/\": \"-\",\n        \"\\\\\": \"-\",\n        \"@\": \"at\",\n        \"#\": \"\",\n        \"$\": \"\",\n        \"%\": \"\",\n        \"^\": \"\",\n        \"&\": \"\",\n        \"*\": \"\",\n        \"+\": \"\",\n        \"=\": \"\",\n        \":\": \"\",\n        \";\": \"\",\n        \"?\": \"\",\n        \"!\": \"\",\n        '\"': \"\",\n        \"'\": \"\",\n        \"<\": \"\",\n        \">\": \"\",\n        \"|\": \"\",\n        \"`\": \"\",\n        \"~\": \"\"\n    };\n    return str.split(\"\").map((char)=>map[char] !== undefined ? map[char] : char).join(\"\");\n}\nfunction parseRuns($, $elem, parentStyle = {}) {\n    const runs = [];\n    $elem.contents().each((_, node)=>{\n        let style = {\n            ...parentStyle\n        };\n        if (node.type === \"tag\") {\n            if (node.name === \"b\" || node.name === \"strong\") style.bold = true;\n            if (node.name === \"i\" || node.name === \"em\") style.italics = true;\n            if (node.name === \"u\") style.underline = {};\n            if (node.name === \"span\" && node.attribs && node.attribs.style) {\n                const s = node.attribs.style;\n                const colorMatch = s.match(/color:\\s*([^;]+)/i);\n                if (colorMatch) style.color = colorMatch[1].replace(\"#\", \"\");\n                const sizeMatch = s.match(/font-size:\\s*(\\d+)px/i);\n                if (sizeMatch) style.size = Number(sizeMatch[1]) * 2;\n            }\n            runs.push(...parseRuns($, $(node), style));\n        } else if (node.type === \"text\") {\n            if (node.data && node.data.trim()) {\n                runs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.TextRun({\n                    text: node.data,\n                    ...style\n                }));\n            }\n        }\n    });\n    return runs;\n}\nfunction isEmptyParagraph(paragraph) {\n    // Вариант с root (docx >= 7)\n    if (Array.isArray(paragraph.root) && paragraph.root.length > 1) {\n        const textRun = paragraph.root[1];\n        if (textRun && Array.isArray(textRun.root) && textRun.root.length > 1) {\n            const textValue = textRun.root[1];\n            return textValue === \" \" || textValue === \"\\xa0\" || textValue === \"&nbsp;\";\n        }\n    }\n    // Старые варианты (на всякий случай)\n    if (paragraph.children && paragraph.children.length === 1) {\n        const t = paragraph.children[0];\n        const text = t.text || t.root && t.root.text;\n        return text === \"\\xa0\" || text === \"&nbsp;\" || text === \" \";\n    }\n    if (paragraph.options?.text !== undefined) {\n        return paragraph.options.text === \"\\xa0\" || paragraph.options.text === \"&nbsp;\" || paragraph.options.text === \" \";\n    }\n    return false;\n}\nfunction hasSignificantContent(paragraph) {\n    // Проверяем root (docx >= 7)\n    if (Array.isArray(paragraph.root) && paragraph.root.length > 1) {\n        const textRun = paragraph.root[1];\n        if (textRun && Array.isArray(textRun.root) && textRun.root.length > 1) {\n            const textValue = textRun.root[1];\n            // Считаем значимым только если есть буква или цифра\n            return /[A-Za-zА-Яа-яЁё0-9]/.test(textValue);\n        }\n    }\n    // Старые варианты (на всякий случай)\n    if (paragraph.children && paragraph.children.length === 1) {\n        const t = paragraph.children[0];\n        const text = t.text || t.root && t.root.text;\n        return /[A-Za-zА-Яа-яЁё0-9]/.test(text);\n    }\n    if (paragraph.options?.text !== undefined) {\n        return /[A-Za-zА-Яа-яЁё0-9]/.test(paragraph.options.text);\n    }\n    return false;\n}\nfunction isTrulyEmptyParagraph(paragraph) {\n    // Проверяем root (docx >= 7)\n    if (Array.isArray(paragraph.root) && paragraph.root.length > 1) {\n        const textRun = paragraph.root[1];\n        if (textRun && Array.isArray(textRun.root) && textRun.root.length > 1) {\n            const textValue = textRun.root[1];\n            return textValue === \" \" || textValue === \"\\xa0\" || textValue === \"&nbsp;\";\n        }\n    }\n    // Старые варианты (на всякий случай)\n    if (paragraph.children && paragraph.children.length === 1) {\n        const t = paragraph.children[0];\n        const text = t.text || t.root && t.root.text;\n        return text === \"\\xa0\" || text === \"&nbsp;\" || text === \" \";\n    }\n    if (paragraph.options?.text !== undefined) {\n        return paragraph.options.text === \"\\xa0\" || paragraph.options.text === \"&nbsp;\" || paragraph.options.text === \" \";\n    }\n    return false;\n}\nfunction trimTrailingEmptyParagraphs(paragraphs) {\n    let lastNonEmpty = paragraphs.length - 1;\n    for(; lastNonEmpty >= 0; lastNonEmpty--){\n        if (!isTrulyEmptyParagraph(paragraphs[lastNonEmpty])) {\n            break;\n        }\n    }\n    return paragraphs.slice(0, lastNonEmpty + 1);\n}\nfunction htmlToDocxParagraphs(html) {\n    const $ = cheerio__WEBPACK_IMPORTED_MODULE_2__.load(html);\n    const paragraphs = [];\n    let prevWasBlock = false;\n    $(\"body\").contents().each((_, elem)=>{\n        if (elem.type === \"tag\") {\n            if (elem.tagName === \"p\" || elem.tagName === \"div\") {\n                const innerHtml = $(elem).html()?.replace(/\\s|&nbsp;|<br\\s*\\/?>(?=\\s*<\\/p>)/gi, \"\").trim();\n                if (!innerHtml) {\n                    paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph(\"\\xa0\"));\n                    prevWasBlock = true;\n                } else {\n                    const runs = parseRuns($, $(elem));\n                    if (runs.length) {\n                        paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph({\n                            children: runs\n                        }));\n                        prevWasBlock = true;\n                    } else {\n                        paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph(\"\\xa0\"));\n                        prevWasBlock = true;\n                    }\n                }\n            } else if (elem.tagName === \"br\") {\n                paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph(\"\\xa0\"));\n                prevWasBlock = true;\n            } else if (elem.tagName === \"ul\" || elem.tagName === \"ol\") {\n                $(elem).find(\"li\").each((_, li)=>{\n                    const runs = parseRuns($, $(li));\n                    if (runs.length) {\n                        paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph({\n                            children: runs,\n                            bullet: elem.tagName === \"ul\"\n                        }));\n                        prevWasBlock = true;\n                    }\n                });\n            } else if (elem.tagName === \"h1\" || elem.tagName === \"h2\" || elem.tagName === \"h3\") {\n                const runs = parseRuns($, $(elem));\n                if (runs.length) {\n                    paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph({\n                        children: runs,\n                        heading: elem.tagName.toUpperCase()\n                    }));\n                    prevWasBlock = true;\n                }\n            }\n        } else if (elem.type === \"text\") {\n            if (elem.data && elem.data.replace(/\\s+/g, \"\") === \"\") {\n                if (prevWasBlock) {\n                    paragraphs.push(new docx__WEBPACK_IMPORTED_MODULE_4__.Paragraph(\"\\xa0\"));\n                    prevWasBlock = false;\n                }\n            }\n        }\n    });\n    // Удаляем только хвост из truly empty абзацев\n    return trimTrailingEmptyParagraphs(paragraphs);\n}\n// Функция автозаполнения пустых абзацев DOCX\nfunction fillEmptyParagraphsInDocx(buffer) {\n    const zip = new (pizzip__WEBPACK_IMPORTED_MODULE_5___default())(buffer);\n    let xml = zip.file(\"word/document.xml\")?.asText();\n    if (!xml) return buffer;\n    const $ = (0,cheerio__WEBPACK_IMPORTED_MODULE_2__.load)(xml, {\n        xmlMode: true\n    });\n    $(\"*\").each((_, p)=>{\n        if (p.tagName === \"w:p\") {\n            const hasText = $(p).find(\"w\\\\:t, t\").filter((_, t)=>$(t).text().trim() !== \"\").length > 0;\n            if (!hasText) {\n                const run = $('<w:r><w:t xml:space=\"preserve\">&#160;</w:t></w:r>');\n                $(p).append(run);\n            }\n        }\n    });\n    const newXml = $.xml();\n    zip.file(\"word/document.xml\", newXml);\n    return zip.generate({\n        type: \"nodebuffer\"\n    });\n}\nasync function POST(request) {\n    try {\n        console.log(\"=== НАЧАЛО ОБРАБОТКИ ФАЙЛА (HTML-процессинг) ===\");\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        const output = formData.get(\"output\")?.toLowerCase() || \"docx\";\n        if (!file) {\n            console.error(\"ОШИБКА: Файл не найден в запросе\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Файл не найден\"\n            }, {\n                status: 400\n            });\n        }\n        if (!file.name.toLowerCase().endsWith(\".docx\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Поддерживаются только файлы DOCX.\"\n            }, {\n                status: 400\n            });\n        }\n        if (file.size > 10 * 1024 * 1024) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Файл слишком большой (максимум 10MB)\"\n            }, {\n                status: 400\n            });\n        }\n        const arrayBuffer = await file.arrayBuffer();\n        let buffer = Buffer.from(arrayBuffer);\n        buffer = fillEmptyParagraphsInDocx(buffer);\n        let html;\n        try {\n            const { value } = await mammoth__WEBPACK_IMPORTED_MODULE_1__.convertToHtml({\n                buffer\n            });\n            html = value;\n        } catch (err) {\n            console.error(\"ОШИБКА: Не удалось конвертировать DOCX в HTML:\", err);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ошибка конвертации DOCX в HTML: \" + String(err)\n            }, {\n                status: 500\n            });\n        }\n        let processedHtml;\n        try {\n            processedHtml = typographHtml(html);\n        } catch (err) {\n            console.error(\"ОШИБКА: Не удалось применить типографику к HTML:\", err);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ошибка типографики по HTML: \" + String(err)\n            }, {\n                status: 500\n            });\n        }\n        const originalName = file.name.replace(/\\.docx$/i, \"\");\n        let fileNameTranslit = transliterate(originalName);\n        fileNameTranslit = fileNameTranslit.replace(/[^A-Za-z0-9_-]/g, \"_\").replace(/[_-]+$/, \"\");\n        if (output === \"html\") {\n            const encoder = new TextEncoder();\n            const htmlBuffer = encoder.encode(processedHtml);\n            const asciiFileName = fileNameTranslit;\n            const utf8FileName = `${fileNameTranslit}.html`;\n            console.log(\"УСПЕХ: Создан выходной HTML-файл:\", utf8FileName);\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(htmlBuffer, {\n                status: 200,\n                headers: {\n                    \"Content-Type\": \"text/html; charset=utf-8\",\n                    \"Content-Disposition\": `attachment; filename=\"${asciiFileName}.html\"; filename*=UTF-8''${encodeURIComponent(utf8FileName)}`,\n                    \"Content-Length\": htmlBuffer.length.toString(),\n                    \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n                    \"Pragma\": \"no-cache\",\n                    \"Expires\": \"0\"\n                }\n            });\n        }\n        // DOCX через docx\n        let docxBuffer;\n        try {\n            const doc = new docx__WEBPACK_IMPORTED_MODULE_4__.Document({\n                sections: [\n                    {\n                        properties: {},\n                        children: htmlToDocxParagraphs(processedHtml)\n                    }\n                ]\n            });\n            docxBuffer = await docx__WEBPACK_IMPORTED_MODULE_4__.Packer.toBuffer(doc);\n        } catch (err) {\n            console.error(\"ОШИБКА: Не удалось сгенерировать DOCX через docx:\", err);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ошибка генерации DOCX: \" + String(err)\n            }, {\n                status: 500\n            });\n        }\n        const asciiFileName = fileNameTranslit;\n        const utf8FileName = `${fileNameTranslit}.docx`;\n        console.log(\"УСПЕХ: Создан выходной файл:\", utf8FileName);\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(docxBuffer, {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                \"Content-Disposition\": `attachment; filename=\"${asciiFileName}.docx\"; filename*=UTF-8''${encodeURIComponent(utf8FileName)}`,\n                \"Content-Length\": docxBuffer.length.toString(),\n                \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n                \"Pragma\": \"no-cache\",\n                \"Expires\": \"0\"\n            }\n        });\n    } catch (error) {\n        console.error(\"ОШИБКА: Необработанная ошибка:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/process/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/typography.ts":
/*!***************************!*\
  !*** ./lib/typography.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdvancedTypographyProcessor: () => (/* binding */ AdvancedTypographyProcessor),\n/* harmony export */   TypographyProcessor: () => (/* binding */ TypographyProcessor),\n/* harmony export */   typographText: () => (/* binding */ typographText)\n/* harmony export */ });\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/esm/index.js\");\n\nclass AdvancedTypographyProcessor {\n    static{\n        this.NON_BREAKING_SPACE = \"\\xa0\";\n    }\n    static{\n        this.THIN_SPACE = \" \";\n    }\n    static{\n        this.EM_DASH = \"—\";\n    }\n    static{\n        this.ELLIPSIS = \"…\";\n    }\n    static{\n        this.EN_SPACE = \" \";\n    }\n    /**\n   * Определяет, является ли текст стихотворением\n   */ static isPoetry(text) {\n        const lines = text.split(\"\\n\").filter((line)=>line.trim().length > 0);\n        // Признаки стихотворения:\n        let poetryScore = 0;\n        // 1. Короткие строки (меньше 60 символов в среднем)\n        const avgLineLength = lines.reduce((sum, line)=>sum + line.trim().length, 0) / lines.length;\n        if (avgLineLength < 60) poetryScore += 2;\n        // 2. Много переносов строк\n        const lineBreaks = (text.match(/\\n/g) || []).length;\n        const wordCount = text.split(/\\s+/).length;\n        if (lineBreaks / wordCount > 0.1) poetryScore += 2;\n        // 3. Табуляции в начале строк (лесенка)\n        const indentedLines = lines.filter((line)=>line.match(/^\\s{2,}/) || line.startsWith(\"\t\")).length;\n        if (indentedLines / lines.length > 0.3) poetryScore += 3;\n        // 4. Заглавные буквы в начале строк\n        const capitalizedLines = lines.filter((line)=>/^[А-ЯЁA-Z]/.test(line.trim())).length;\n        if (capitalizedLines / lines.length > 0.7) poetryScore += 1;\n        // 5. Ритмичность (повторяющаяся длина строк)\n        const lineLengths = lines.map((line)=>line.trim().length);\n        const lengthVariance = this.calculateVariance(lineLengths);\n        if (lengthVariance < 100) poetryScore += 1;\n        return poetryScore >= 4;\n    }\n    /**\n   * Вычисляет дисперсию массива чисел\n   */ static calculateVariance(numbers) {\n        const mean = numbers.reduce((sum, num)=>sum + num, 0) / numbers.length;\n        const squaredDiffs = numbers.map((num)=>Math.pow(num - mean, 2));\n        return squaredDiffs.reduce((sum, diff)=>sum + diff, 0) / numbers.length;\n    }\n    /**\n   * Обрабатывает текст с сохранением форматирования\n   */ static processWithFormatting(paragraphs) {\n        const fullText = paragraphs.map((p)=>p.content.map((c)=>c.text).join(\"\")).join(\"\\n\");\n        const isPoetryText = this.isPoetry(fullText);\n        return paragraphs.map((paragraph)=>{\n            const processedContent = paragraph.content.map((item)=>({\n                    ...item,\n                    text: isPoetryText ? this.processPoetryText(item.text) : this.processRegularText(item.text)\n                }));\n            return {\n                ...paragraph,\n                content: processedContent,\n                style: isPoetryText && paragraph.style === \"normal\" ? \"poetry\" : paragraph.style\n            };\n        });\n    }\n    /**\n   * Обработка обычного текста\n   */ static processRegularText(text) {\n        let result = text;\n        // Основные правила типографики\n        result = this.applyBasicRules(result);\n        result = this.applyNonBreakingSpaces(result);\n        result = this.applyPunctuation(result);\n        // Удаляем все пустые строки в конце текста\n        result = result.replace(/(\\r?\\n)+$/g, \"\");\n        return result;\n    }\n    /**\n   * Обработка стихотворного текста с сохранением структуры\n   */ static processPoetryText(text) {\n        let result = text;\n        // Сохраняем табуляции и отступы\n        const lines = result.split(\"\\n\");\n        const processedLines = lines.map((line)=>{\n            // Сохраняем начальные пробелы и табуляции\n            const indent = line.match(/^[\\s\\t]*/)?.[0] || \"\";\n            const content = line.substring(indent.length);\n            if (content.trim().length === 0) {\n                return line; // Пустые строки не обрабатываем\n            }\n            // Обрабатываем только содержимое, сохраняя отступы\n            let processedContent = content;\n            // Мягкая обработка для стихов (меньше изменений)\n            processedContent = this.applyPoetryRules(processedContent);\n            return indent + processedContent;\n        });\n        return processedLines.join(\"\\n\");\n    }\n    /**\n   * Применяет базовые правила типографики\n   */ static applyBasicRules(text) {\n        let result = text;\n        // 0. Защита от слипания слов: временно заменяем > < на >\\u200B< (невидимый разделитель)\n        result = result.replace(/>\\s+</g, \">​<\");\n        // 1. Множественные пробелы (заменяем любые последовательности пробельных символов, кроме \\n, на один пробел)\n        result = result.replace(/[ \\t\\v\\f\\r]{2,}/g, \" \");\n        // 1a. Убираем пробелы в начале и конце каждой строки (но не трогаем внутренние пробелы между словами)\n        result = result.replace(/^[ \\t]+|[ \\t]+$/gm, \"\");\n        // 1b. Между знаком № и цифрой всегда неразрывный пробел\n        result = result.replace(/№\\s*(\\d+)/g, \"№\\xa0$1\");\n        // 2. Защита дефиса между буквами (буква-дефис-буква, сложные слова, фамилии, топонимы и т.д.)\n        result = result.replace(/(\\p{L})-(\\p{L})/gu, \"$1[[HYPHEN]]$2\");\n        // 3. Защита дефиса в сложных словах и наречиях\n        const hyphenWords = [\n            \"из-за\",\n            \"из-под\",\n            \"по-русски\",\n            \"по-моему\",\n            \"по-твоему\",\n            \"по-нашему\",\n            \"по-вашему\",\n            \"кое-что\",\n            \"кое-как\",\n            \"кто-нибудь\",\n            \"что-нибудь\",\n            \"где-нибудь\",\n            \"когда-либо\",\n            \"как-то\",\n            \"все-таки\",\n            \"по-своему\",\n            \"по-старому\",\n            \"по-новому\",\n            \"по-английски\",\n            \"по-французски\",\n            \"по-немецки\",\n            \"по-итальянски\",\n            \"по-испански\",\n            \"по-китайски\",\n            \"по-японски\",\n            \"по-украински\",\n            \"по-белорусски\",\n            \"по-польски\",\n            \"по-чешски\",\n            \"по-гречески\",\n            \"по-турецки\",\n            \"по-арабски\",\n            \"по-еврейски\",\n            \"по-латински\",\n            \"по-современному\",\n            \"по-старинному\",\n            \"по-детски\",\n            \"по-взрослому\",\n            \"по-товарищески\",\n            \"по-приятельски\",\n            \"по-родственному\",\n            \"по-отечески\",\n            \"по-матерински\",\n            \"по-братски\",\n            \"по-сестрински\",\n            \"по-деловому\",\n            \"по-дружески\",\n            \"по-особенному\",\n            \"по-особому\"\n        ];\n        hyphenWords.forEach((word)=>{\n            // Защищаем оба варианта: с \"е\" и с \"ё\" (например, всё-таки/все-таки)\n            const safe = word.replace(/-/g, \"[[HYPHEN]]\");\n            const regex = new RegExp(word.replace(\"е\", \"[её]\"), \"gi\");\n            result = result.replace(regex, safe);\n        });\n        // 4. Защита сокращений\n        result = result.replace(/\\bт\\.-е\\./gi, \"[[T_E]]\").replace(/\\bт\\.-д\\./gi, \"[[T_D]]\").replace(/\\bт\\.-п\\./gi, \"[[T_P]]\").replace(/\\bт\\.-к\\./gi, \"[[T_K]]\").replace(/\\bт\\.-н\\./gi, \"[[T_N]]\").replace(/\\bт\\.-о\\./gi, \"[[T_O]]\").replace(/\\bи\\ т\\.-д\\./gi, \"[[I_T_D]]\");\n        // 5. Диапазон чисел: 1966-1977 → 1966–1977 (en dash), без пробелов вокруг\n        result = result.replace(/(\\d{1,4})\\s*-\\s*(\\d{1,4})/g, \"$1–$2\");\n        // 5a. Удаляем пробелы вокруг en dash между числами (2020 - 2021 → 2020–2021)\n        result = result.replace(/(\\d{1,4})\\s*–\\s*(\\d{1,4})/g, \"$1–$2\");\n        // 6. en dash между словами или с пробелами → em dash с неразрывным пробелом\n        // (\\s|^)–(\\s) → \\u00A0— \n        result = result.replace(/(\\s|^|\\n)–(\\s)/g, \"$1\\xa0— \");\n        // Также: пробел en dash пробел\n        result = result.replace(/\\s+–\\s+/g, \"\\xa0— \");\n        // 7. Пробел-длинное тире-пробел и пробел-дефис-пробел → неразрывный пробел—обычный пробел\n        result = result.replace(/\\s+(-|—)\\s+/g, \"\\xa0— \");\n        // 8. Между словами (буква-пробел-дефис-пробел-буква)\n        // После тире всегда пробел\n        result = result.replace(/(\\p{L})\\s*-\\s*(\\p{L})/gu, \"$1 — $2\");\n        // После em dash/en dash между словами — всегда пробел, КРОМЕ диапазонов чисел\n        result = result.replace(/—(?!\\d)(\\S)/g, \"— $1\");\n        result = result.replace(/–(?!\\d)(\\S)/g, \"– $1\");\n        // 9. В начале строки (диалоги)\n        result = result.replace(/(^|\\n)-\\s/gu, \"$1— \");\n        // 10. Возвращаем сокращения, дефисы внутри слов и сложных слов\n        result = result.replace(/\\[\\[T_E\\]\\]/g, \"т.-е.\").replace(/\\[\\[T_D\\]\\]/g, \"т.-д.\").replace(/\\[\\[T_P\\]\\]/g, \"т.-п.\").replace(/\\[\\[T_K\\]\\]/g, \"т.-к.\").replace(/\\[\\[T_N\\]\\]/g, \"т.-н.\").replace(/\\[\\[T_O\\]\\]/g, \"т.-о.\").replace(/\\[\\[I_T_D\\]\\]/g, \"и т.д.\").replace(/\\[\\[HYPHEN\\]\\]/g, \"-\");\n        // 11. Замена трех точек на многоточие\n        result = result.replace(/\\.{3,}/g, this.ELLIPSIS);\n        // 12. Пробелы перед знаками препинания\n        result = result.replace(/\\s+([,.;:!?])/g, \"$1\");\n        // 13. Пробелы после знаков препинания\n        result = result.replace(/([,.;:!?])([А-Яа-яёЁA-Za-z])/g, \"$1 $2\");\n        // 14. Пробелы в скобках\n        result = result.replace(/\\(\\s+/g, \"(\");\n        result = result.replace(/\\s+\\)/g, \")\");\n        // В самом конце: нормализуем двойные пробелы до одного\n        result = result.replace(/ {2,}/g, \" \");\n        // 99. Восстанавливаем невидимый разделитель между тегами\n        result = result.replace(/\\u200B/g, \" \");\n        // После однобуквенных предлогов — неразрывный пробел (улучшенная регулярка)\n        result = result.replace(/(^|[\\s.,;:!?\"'«»()\\[\\]{}-])([вксуояи])\\s+([А-Яа-яA-Za-z])/gmu, \"$1$2\\xa0$3\");\n        // Между числом и словом — неразрывный пробел\n        result = result.replace(/(\\d)\\s+([А-Яа-яA-Za-z])/g, \"$1\\xa0$2\");\n        return result;\n    }\n    /**\n   * Применяет правила для стихотворений (более деликатно)\n   */ static applyPoetryRules(text) {\n        let result = text;\n        // Только основные правила, не трогаем структуру\n        result = result.replace(/--/g, this.EM_DASH);\n        result = result.replace(/\\.{3,}/g, this.ELLIPSIS);\n        // Осторожно с пробелами в стихах\n        result = result.replace(/\\s+([,.;:!?])/g, \"$1\");\n        result = result.replace(/([,.;:!?])([А-Яа-яёЁ])/g, \"$1 $2\");\n        return result;\n    }\n    /**\n   * Применяет неразрывные пробелы\n   */ static applyNonBreakingSpaces(text) {\n        let result = text;\n        // Короткие слова\n        const shortWords = [\n            \"а\",\n            \"в\",\n            \"и\",\n            \"к\",\n            \"о\",\n            \"с\",\n            \"у\",\n            \"не\",\n            \"на\",\n            \"от\",\n            \"до\",\n            \"за\",\n            \"из\",\n            \"по\",\n            \"со\",\n            \"во\",\n            \"об\"\n        ];\n        shortWords.forEach((word)=>{\n            const regex = new RegExp(`\\\\b${word}\\\\s+`, \"gi\");\n            result = result.replace(regex, word + this.NON_BREAKING_SPACE);\n        });\n        // Числа с единицами измерения\n        result = result.replace(/(\\d+)\\s+(кг|г|т|мг|мм|дм|см|м|км|л|мл|руб|коп|долл|евро)/gi, `$1${this.NON_BREAKING_SPACE}$2`);\n        // Инициалы с фамилией\n        result = result.replace(/([А-ЯЁ]\\.)\\s+([А-ЯЁ]\\.)\\s+([А-ЯЁ][а-яё]+)/g, `$1${this.NON_BREAKING_SPACE}$2${this.NON_BREAKING_SPACE}$3`);\n        return result;\n    }\n    /**\n   * Применяет правила пунктуации\n   */ static applyPunctuation(text) {\n        let result = text;\n        // Диалоги\n        result = result.replace(/^\\s*-\\s*/gm, this.EM_DASH + this.EN_SPACE);\n        // Проценты\n        result = result.replace(/(\\d+)\\s*%/g, `$1${this.THIN_SPACE}%`);\n        return result;\n    }\n    /**\n   * Определяет структуру четверостиший\n   */ static detectStanzaStructure(text) {\n        const lines = text.split(\"\\n\");\n        const stanzas = [];\n        let currentStanza = [];\n        let emptyLineCount = 0;\n        for (const line of lines){\n            if (line.trim().length === 0) {\n                emptyLineCount++;\n                if (emptyLineCount >= 1 && currentStanza.length > 0) {\n                    // Конец строфы\n                    stanzas.push(currentStanza.join(\"\\n\"));\n                    currentStanza = [];\n                    emptyLineCount = 0;\n                }\n            } else {\n                currentStanza.push(line);\n                emptyLineCount = 0;\n            }\n        }\n        // Добавляем последнюю строфу\n        if (currentStanza.length > 0) {\n            stanzas.push(currentStanza.join(\"\\n\"));\n        }\n        return stanzas;\n    }\n    /**\n   * Обрабатывает простой текст (для обратной совместимости)\n   */ static process(text) {\n        const isPoetryText = this.isPoetry(text);\n        if (isPoetryText) {\n            return this.processPoetryText(text);\n        } else {\n            return this.processRegularText(text);\n        }\n    }\n    /**\n   * Создает статистику обработки\n   */ static getProcessingStats(originalText, processedText) {\n        const isPoetryText = this.isPoetry(originalText);\n        return {\n            originalLength: originalText.length,\n            processedLength: processedText.length,\n            isPoetry: isPoetryText,\n            spacesReplaced: (originalText.match(/[ ]{2,}/g) || []).length,\n            dashesReplaced: (originalText.match(/--/g) || []).length,\n            ellipsisReplaced: (originalText.match(/\\.{3,}/g) || []).length,\n            stanzaCount: isPoetryText ? this.detectStanzaStructure(originalText).length : undefined\n        };\n    }\n    /**\n   * Получить пример текста (обновленный)\n   */ static getExampleText() {\n        return `Пример текста с   типографскими ошибками\n\nПроблемы  с   пробелами    и знаками   ,точками   .\nДефисы  --  вместо тире и многоточие...\nПлохие пробелы в скобках( вот так ).\n\nНеразрывные пробелы:\nВ магазин за хлебом.\nК врачу на осмотр.\nНа работу в офис.\nВес: 10 кг, рост: 180 см.\nА. С. Пушкин написал много произведений.\n\nДиалоги:\n- Привет! Как дела?\n- Хорошо, спасибо за вопрос.\n\nПроценты: скидка 15% на все товары.\n\nПРИМЕР СТИХОТВОРЕНИЯ:\n\n        Белеет парус одинокой\n        В тумане моря голубом...\n        Что ищет он в стране далекой?\n        Что кинул он в краю родном?\n\n    Играют волны -- ветер свищет,\n    И мачта гнется и скрыпит...\n        Увы! он счастия не ищет\n        И не от счастия бежит!\n\nПод ним струя светлей лазури,\nНад ним луч солнца золотой...\n    А он, мятежный, просит бури,\n    Как будто в бурях есть покой!\n\nЭтот текст содержит различные типографские ошибки и демонстрирует работу с поэзией.`;\n    }\n}\n// Экспорт для обратной совместимости\nconst TypographyProcessor = AdvancedTypographyProcessor;\nfunction typographText(text) {\n    return AdvancedTypographyProcessor.process(text);\n}\nfunction typographHtml(html) {\n    const $ = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n    $(\"body, body *\").contents().each(function() {\n        // Если это текст внутри пустого <p> — не трогаем\n        if (this.type === \"text\") {\n            const parent = this.parent;\n            if (parent && parent.tagName === \"p\" && (!this.data || this.data.replace(/\\s|\\u00A0|&nbsp;/g, \"\") === \"\")) {\n                return;\n            }\n            this.data = typographText(this.data || \"\");\n        }\n    });\n    return $.html();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/typography.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/parse5","vendor-chunks/iconv-lite","vendor-chunks/htmlparser2","vendor-chunks/entities","vendor-chunks/cheerio","vendor-chunks/css-select","vendor-chunks/encoding-sniffer","vendor-chunks/domutils","vendor-chunks/css-what","vendor-chunks/domhandler","vendor-chunks/cheerio-select","vendor-chunks/whatwg-mimetype","vendor-chunks/whatwg-encoding","vendor-chunks/dom-serializer","vendor-chunks/nth-check","vendor-chunks/parse5-htmlparser2-tree-adapter","vendor-chunks/parse5-parser-stream","vendor-chunks/safer-buffer","vendor-chunks/domelementtype","vendor-chunks/boolbase","vendor-chunks/underscore","vendor-chunks/mammoth","vendor-chunks/bluebird","vendor-chunks/jszip","vendor-chunks/pizzip","vendor-chunks/xmlbuilder","vendor-chunks/pako","vendor-chunks/lop","vendor-chunks/readable-stream","vendor-chunks/inherits","vendor-chunks/dingbat-to-unicode","vendor-chunks/docx","vendor-chunks/util-deprecate","vendor-chunks/string_decoder","vendor-chunks/safe-buffer","vendor-chunks/process-nextick-args","vendor-chunks/path-is-absolute","vendor-chunks/option","vendor-chunks/lie","vendor-chunks/isarray","vendor-chunks/immediate","vendor-chunks/core-util-is","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprocess%2Froute&page=%2Fapi%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprocess%2Froute.ts&appDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FVolumes%2FStore1%2FYandex.Disk.localized%2Fwww-yandex%2Ftypography-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();